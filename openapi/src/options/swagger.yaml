openapi: 3.0.0

info:
  title: PayBox
  version: 1.0.0
  description: The Api collection for PayBox
  license:
    name: MIT license
    url: https://github.com/shawakash/payBox/blob/dev/LICENSE.md

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /_health:
    get:
      description: Health checkpoint
      responses:
        '200':
          description: A successful response

tags:
  - name: Miscellaneous
    description: Misc API
  - name: Client
    description: Client Crud API
  - name: Transaction
    description: Transactions API
  - name: Address
    description: Address Crud API
  - name: Qrcode
    description: Qrcode create API

paths:
  /_health:
    get:
      tags:
        - Miscellaneous
      description: healthcheck endpoint
      operationId: getHealthCheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    $ref: "#/components/schemas/HeathCheck"

  /:
    get:
      tags:
        - Miscellaneous
      description: homepage endpoint
      operationId: getHealthCheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    $ref: "#/components/schemas/HeathCheck"

  /client/:
    post:
      tags:
        - Client
      description: Client creation endpoint
      operationId: createClient
      requestBody:
        description: Client object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClient"
      responses:
        "200":
          description: updated SMTP test settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean

components:
  schemas:
    HeathCheck:
      type: object
      properties:
        uptime:
          type: number
        message:
          type: string
        timestamp:
          type: integer
          format: int64

    CreateClient:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - type: null
        jwt:
          type: string
        status:
          type: string
          enum:
            - ok
            - error
        username:
          type: string
        email:
          type: string
        mobile:
          oneOf:
            - type: number
            - type: null
        firstname:
          oneOf:
            - type: string
            - type: null
        lastname:
          oneOf:
            - type: string
            - type: null
        password:
          type: string
        address:
          oneOf: 
            - type: object
            - type: null
          properties:
            eth:
              oneOf:
                - type: null
                - type: string
            sol:
              oneOf:
                - type: null
                - type: string
            bitcoin:
              oneOf:
                - type: null
                - type: string
            usdc:
              oneOf:
                - type: null
                - type: string
